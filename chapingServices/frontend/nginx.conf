events {
    worker_connections 1024;
}

http {
    client_max_body_size 0;

    include /etc/nginx/mime.types;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/host.access.log  main;
    # error_log  /var/log/nginx/error.log  error;
        


    upstream flask_server {
        server backend:5000;
        keepalive 128;            
    }

    gzip on;
    gzip_min_length  5k;
    gzip_buffers     4 16k;
    #gzip_http_version 1.0;
    gzip_comp_level 3;
    gzip_types       text/plain application/javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary on;
    server {

        # #设置跨域配置 Start
        set $cors_origin "";
        if ($http_origin ~* "^http://192.168.1.7:8080$"){
                set $cors_origin $http_origin;
        }
        if ($http_origin ~* "^http://192.168.1.7:8888$"){
                set $cors_origin $http_origin;
        }

        add_header Access-Control-Allow-Origin $cors_origin always; 
        add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Headers DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token always;
        add_header Access-Control-Max-Age 1728000 always;

        # 预检请求处理
        if ($request_method = OPTIONS) {
                return 204;
        }
        # #设置跨域配置 End

        location /api/ {
            proxy_pass http://flask_server;  # need api, same to flask
            proxy_set_header Host $host;
            # add_header Access-Control-Allow-Origin *;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            root /usr/share/static;
            expires 30d;
            access_log off;
        }
        location ~ .*\.(js|css)$
        {
            root /usr/share/static;
            expires 1h;
            access_log off;
        }

        #关闭favicon.ico不存在时记录日志
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # 不允许访问隐藏文件例如 .htaccess, .htpasswd, .DS_Store (Mac).
        # location ~ /. {
        #     deny all;
        #     access_log off;
        #     log_not_found off;
        # }

        location / {
            root /usr/share/static;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
    }
}
